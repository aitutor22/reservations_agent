# Restaurant Voice Agent

> AI-powered voice agent for restaurant reservations using OpenAI Realtime API

## Architecture
- Frontend: React + TypeScript with WebSocket for real-time audio
- Backend: FastAPI with OpenAI Agents SDK
- Voice Processing: OpenAI Realtime API (speech-to-speech)
- Integration: Future ePOS system for reservation management

## Key Components
- Main greeting agent routes to specialized agents
- General info agent handles hours, location, specials  
- Reservation agent manages bookings with tool calling
- WebSocket maintains persistent audio connection

## API Endpoints
- POST /api/reservations - Create new reservation
- PUT /api/reservations/modify - Modify existing booking
- DELETE /api/reservations/cancel - Cancel reservation
- GET /api/session/health - WebSocket health check
- WS /ws/audio - WebSocket endpoint for audio streaming

## Data Models
```typescript
interface Reservation {
  id: string;
  date: string;
  time: string;
  partySize: number;
  name: string;
  phone: string;
  email?: string;
  confirmationNumber: string;
  specialRequests?: string;
  status: 'confirmed' | 'cancelled' | 'modified';
}

interface AudioChunk {
  data: ArrayBuffer;
  timestamp: number;
  role: 'user' | 'agent';
}
```

## Conversation Flow
1. Greeting: "Welcome to [Restaurant Name], how can I help you?"
2. Intent Detection: Routes to appropriate agent
3. Information Gathering: Collects necessary details
4. Action Execution: Creates/modifies/cancels reservation
5. Confirmation: Provides confirmation number and summary

## Development Patterns
- Component-based React architecture
- WebSocket connection with auto-reconnect
- Error boundaries for graceful failure handling
- Type-safe API calls with TypeScript
- Async/await pattern for all API operations